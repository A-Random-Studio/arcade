// Code generated by mockery v1.0.0. DO NOT EDIT.

package mocks

import (
	game "github.com/bseto/arcade/backend/game"

	mock "github.com/stretchr/testify/mock"

	registry "github.com/bseto/arcade/backend/websocket/registry"
)

// GameFactory is an autogenerated mock type for the GameFactory type
type GameFactory struct {
	mock.Mock
}

// GetAvailableGames provides a mock function with given fields:
func (_m *GameFactory) GetAvailableGames() []string {
	ret := _m.Called()

	var r0 []string
	if rf, ok := ret.Get(0).(func() []string); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]string)
		}
	}

	return r0
}

// GetGame provides a mock function with given fields: _a0, _a1
func (_m *GameFactory) GetGame(_a0 string, _a1 registry.Registry) game.GameRouter {
	ret := _m.Called(_a0, _a1)

	var r0 game.GameRouter
	if rf, ok := ret.Get(0).(func(string, registry.Registry) game.GameRouter); ok {
		r0 = rf(_a0, _a1)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(game.GameRouter)
		}
	}

	return r0
}
