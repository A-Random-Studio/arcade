// Code generated by mockery v1.0.0. DO NOT EDIT.

package mocks

import (
	identifier "github.com/bseto/arcade/backend/websocket/identifier"
	mock "github.com/stretchr/testify/mock"

	registry "github.com/bseto/arcade/backend/websocket/registry"
)

// GameRouter is an autogenerated mock type for the GameRouter type
type GameRouter struct {
	mock.Mock
}

// ClientQuit provides a mock function with given fields: clientID, reg
func (_m *GameRouter) ClientQuit(clientID identifier.Client, reg registry.Registry) {
	_m.Called(clientID, reg)
}

// NewClient provides a mock function with given fields: clientID, reg
func (_m *GameRouter) NewClient(clientID identifier.Client, reg registry.Registry) {
	_m.Called(clientID, reg)
}

// RouteMessage provides a mock function with given fields: messageType, message, clientID, messageErr, reg
func (_m *GameRouter) RouteMessage(messageType int, message []byte, clientID identifier.Client, messageErr error, reg registry.Registry) {
	_m.Called(messageType, message, clientID, messageErr, reg)
}

// RouterName provides a mock function with given fields:
func (_m *GameRouter) RouterName() string {
	ret := _m.Called()

	var r0 string
	if rf, ok := ret.Get(0).(func() string); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(string)
	}

	return r0
}
