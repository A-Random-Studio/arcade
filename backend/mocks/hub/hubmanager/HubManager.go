// Code generated by mockery v1.0.0. DO NOT EDIT.

package mocks

import (
	http "net/http"

	gamefactory "github.com/bseto/arcade/backend/game/gamefactory"

	hub "github.com/bseto/arcade/backend/hub"

	mock "github.com/stretchr/testify/mock"

	mux "github.com/gorilla/mux"
)

// HubManager is an autogenerated mock type for the HubManager type
type HubManager struct {
	mock.Mock
}

// CheckIfExists provides a mock function with given fields: w, r
func (_m *HubManager) CheckIfExists(w http.ResponseWriter, r *http.Request) {
	_m.Called(w, r)
}

// GetHub provides a mock function with given fields: r, gameFactory
func (_m *HubManager) GetHub(r *http.Request, gameFactory gamefactory.GameFactory) (hub.Hub, error) {
	ret := _m.Called(r, gameFactory)

	var r0 hub.Hub
	if rf, ok := ret.Get(0).(func(*http.Request, gamefactory.GameFactory) hub.Hub); ok {
		r0 = rf(r, gameFactory)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(hub.Hub)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(*http.Request, gamefactory.GameFactory) error); ok {
		r1 = rf(r, gameFactory)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// GetNewHubName provides a mock function with given fields: w, r
func (_m *HubManager) GetNewHubName(w http.ResponseWriter, r *http.Request) {
	_m.Called(w, r)
}

// SetupRoutes provides a mock function with given fields: r
func (_m *HubManager) SetupRoutes(r *mux.Router) {
	_m.Called(r)
}
